Problem Link - https://leetcode.com/problems/minimum-depth-of-binary-tree/description/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int d=INT_MAX;
    int minDepth(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        if(root->left!=NULL and root->right!=NULL){
       int l= minDepth(root->left);
       int r= minDepth(root->right);
        return min(l,r)+1;}
        else if(root->left==NULL){
            return minDepth(root->right)+1;
        }
        else if(root->right==NULL){
            return minDepth(root->left)+1;
        }
        return 1;
    }
};