Problem Link - https://leetcode.com/problems/binary-tree-right-side-view/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>v;
    int rightView(TreeNode *root,int level,int &maxLevel){
        if (root == NULL)
        {
        return 0;
        }
        if (level > maxLevel)
        {
        v.push_back(root->val);
        maxLevel = level;
        }
        rightView(root->right, level + 1, maxLevel);
        rightView(root->left, level + 1, maxLevel);
        return 0;
     }
    vector<int> rightSideView(TreeNode* root) {
        int level=0;
        int maxLevel=-1;
       rightView(root,level,maxLevel);
       return v;
    }
};