


#include<bits/stdc++.h>
using namespace std;


 
class Solution
{
    private: vector <long long> v;
             stack <long long> st;
    public: 
    //Function to find the next greater element for each element of the array.
    vector<long long> nextLargerElement(vector<long long> arr, int n){
        // Your code here
        for(int i=n-1;i>=0;i--)
        {
            if(st.size()==0)
            {
                v.push_back(-1);
            }
            else if(st.size()>0 && st.top()>arr[i])
            {
                v.push_back(st.top());
            }
            else if( st.size()>0 && st.top()<arr[i] )
            {
                while(st.size()>0 && st.top()<arr[i])
                {
                    st.pop();
                }
                if(st.size()==0)
                {
                    v.push_back(-1);
                }
                else if(st.size()>0 && st.top()>arr[i])
                {
                    v.push_back(st.top());
                }
            }
            st.push(arr[i]);
        }
       reverse(v.begin(),v.end());
        return v;
    }
};



int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        
        int n;
        cin>>n;
        vector<long long> arr(n);
        for(int i=0;i<n;i++)
            cin>>arr[i];
        
        Solution obj;
        vector <long long> res = obj.nextLargerElement(arr, n);
        for (long long i : res) cout << i << " ";
        cout<<endl;
    }
	return 0;
