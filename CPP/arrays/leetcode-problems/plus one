     vector<int>v;
        bool flag=true;
        int n=digits.size();
        if((n==1)&&(digits[0]==9)){
            v.push_back(1);
            v.push_back(0);
            return v;
        }
        else if((n==1)&&(digits[0]!=9)){digits[0]+=1;
                return digits;}
        for(int i=n-1;i>0;i--){
            if((digits[i]+1)<10){
                flag=false;
                digits[i]+=1;
                break;
            }
            
            digits[i]+=1;
            if(digits[i]>=10){digits[i]=digits[i]%10;}
        }
        if((digits[0]==9)&&flag){
            v.push_back(1);
            v.push_back(0);
        }
        else{
            if(flag){
            v.push_back(digits[0]+1);}
            else{v.push_back(digits[0]);}
        }
        for(int i=1;i<n;i++){v.push_back(digits[i]);}
        return v;
    }
    //most optimised
    vector<int> plusOne(vector<int>& digits) {
    for (int i=digits.size(); i--; digits[i] = 0)
        if (digits[i]++ < 9)
            return digits;
    digits[0]++;
    digits.push_back(0);
    return digits;
}
